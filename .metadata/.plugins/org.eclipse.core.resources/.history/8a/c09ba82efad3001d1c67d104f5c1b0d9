/*
 * optic.h
 *
 *  Created on: 2023. márc. 8.
 *      Author: plasz
 */
#ifndef OPTIC_H_
#define OPTIC_H_

#include <stdbool.h>
#include "peripherals.h"
#include "fsl_common.h"

#include "fsl_debug_console.h"

#define ADC_RESULT_MASK 0xFFF
#define TRESHOLD  //ki kell még méregetni

typedef enum Status_Optic
{
	StartFirstConversion,
	WaitForFirstConversion,
	StartSecondConversion,
	WaitForSecondConversion,

} OpticStatus;

typedef struct OpticMeasurement
{
	volatile bool optic_flag;
	uint32_t front_right_val;
	uint32_t front_left_val;
	uint32_t back_right_val;
	uint32_t back_left_val;
	bool is_valid;
	OpticStatus status;
}OpticMeasurement;

extern volatile OpticMeasurement optic_measurement;
extern volatile uint32_t potmeter;

void InitOpticMeasurement(OpticMeasurement* optic_measurement);
void OpticMeasure();
void StartADC();
void SET_IR_LED();
void RESET_IR_LED();

#endif /* OPTIC_H_ */
