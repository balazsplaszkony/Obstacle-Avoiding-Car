/*
 * encoder.h
 *
 *  Created on: 2023. m√°rc. 23.
 *      Author: plasz
 */

#ifndef ENCODER_H_
#define ENCODER_H_
#include <stdbool.h>
#include <stdint.h>
#include <string.h>


#include "peripherals.h"
#include "fsl_debug_console.h"

#define MicroSecondsInMinute 60000000
#define Resolution 20
#define RPMCONST (MicroSecondsInMinute * Resolution)
#define Maximum_Tolerated_RPM_Drop 50
#define FILTER_CUTOFF_FREQ 100.0f // Cutoff frequency in Hz
#define M_PI 3.14159f // Cutoff frequency in Hz

typedef struct Encoder {
    volatile float RPM;
    volatile float RPM_prev;
    float prevInputs[2];
    float prevOutputs[2];
    uint16_t counter;
} Encoder;

extern volatile Encoder Encoder_right;
extern volatile Encoder Encoder_left;

void InitEncoder(Encoder* encoder);
void EncoderRightCallback(uint32_t flags);
void EncoderLeftCallback(uint32_t flags);
float lowPassFilter(float input, float prevOutput, float deltaTime, float cutoffFreq);
void EncoderTIMERHandler();
void HandleNoEncoderSignal(volatile Encoder* encoder);


#endif /* ENCODER_H_ */
